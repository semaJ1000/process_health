#!/path/to/perl

BEGIN {unshift(@INC,"/path/to/perl5lib");};

require "cgi.pl";
use Logger;

&ReadParse;

select(STDOUT);
$| = 1;

my $add_email = $in{'add_email'};
my $remove_email = $in{'remove_email'};
my $email_path = '/path/to/email_list.txt';
my %log_hash = (
   path => '/path/to/process_health.log',
);
my $log = Logger->new(\%log_hash);

html_header2(" Email List ");

my $result = add_remove();

if(!$result) {
   print '<p>Error occured, return value: '.$result.'. Please check input and try again.</p>';
   $log->logF("Webpage: Update emails failed without a known cause");
}

elsif ($result == -1){
   print '<p>No emails exist to remove</p>';
   $log->logF("Webpage: Remove email failed because email list is empty");
}

elsif ($result == -2){
   print '<p>Please provide input</p>';
   $log->logF('Webpage: Add/Remove email failed because no input was provided');
}

else{
print <<END
   <script>
      window.close();
   </script>
END
}

sub add_remove{
   if(!$add_email && !$remove_email){
      return -2;
   }
   elsif(!-e $email_path || -z $email_path){
      if($remove_email){
         return -1;
      }
      if($add_email){
         my @emails = split(',',$add_email);
         open(EMAIL,'>',$email_path);
         chmod 0777, $email_path;
         while(<EMAIL>){}
         my $first = 1;
         for my $email (@emails){
            if ($first){
               print EMAIL $email;
               $first--;
               next;
            }
            print EMAIL "\n$email";
         }
         close(EMAIL);
      }
   }
   else{
      if($add_email){
         my @emails = split(',',$add_email);
         open(EMAIL,'<',$email_path);
         my $lines = ();
         while(my $line = <EMAIL>){
            chomp($line);
            push(@lines,$line);
         }
         push (@lines, @emails);
         close(EMAIL);
         open(EMAIL,'>',$email_path);
         my $first = 1;
         for my $line (@lines){
            if ($first){
               print EMAIL $line;
               $first--;
               next;
            }
            print EMAIL "\n$line";
         }
         close(EMAIL);
      }
      if($remove_email){
         my @emails = split(',',$remove_email);
         my @lines = ();
         open(EMAIL,'<',$email_path);
         for my $line (<EMAIL>){
            my $line_copy = $line;
            chomp($line_copy);
            if (!grep { $_ eq $line_copy } @emails){
               push(@lines,$line) if !$line =~ m/^\s*$/;
            }
         }
         close(EMAIL);
         open(EMAIL,'>',$email_path);
         for my $line (@lines){
            print EMAIL $line;
         }
         close(EMAIL);
      }  
   }
   return 1;
}

sub html_header2 {
   local($title) = @_;
   my $HEADERTYPE = "Content-type: text/html";

   print "$HEADERTYPE\n\n";
   print "<html><head><title>$title</title>";
   print '<style>';

   # PURPLE SECTION START:

      # print 'body {';
      #    print 'background-color: #6500ad;';
      # print '}';
      # print 'input {';
      #    print 'background-color: grey;';
      # print '}';
      # print 'button {';
      #    print 'background-color: grey;';
      # print '}';
      # print 'select {';
      #    print 'background-color:grey;';
      # print '}';
      # print 'table {';
      #    print 'background-color: grey;';
      # print '}';

   # PURPLE SECTION END

      print '#process_info {';
         print 'width: 500px;';
         print 'height:200px;';
      print '}';

      print 'table {';
         print 'border-collapse: collapse;';
      print '}';

      print 'td, th {';
         print 'text-align: center;';
         print 'vertical-align: middle;';
         print 'border: 1px solid black;';
         print 'padding: 8px;';
      print '}';

      print '#toggle-button {';
      print '    position: fixed;';  # Set the position to fixed to keep it in place even when scrolling
      print '    top: 20px;';  # Adjust the distance from the top of the page
      print '    right: 20px;';  # Adjust the distance from the right of the page
      print '    z-index: 9999;';  # Ensure it appears above other elements on the page
      print '}';

   print '</style>';
   print "</head>\n<body>\n";     
}

html_trailer();

1;