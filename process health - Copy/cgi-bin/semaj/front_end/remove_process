#!/path/to/perl

BEGIN {unshift(@INC,"/path/to/perl5lib");};

require "cgi.pl";
use Logger;

&ReadParse;

select(STDOUT);
$| = 1;

my $log_hash = (
   path => '/path/to/process_health.log',
);
my $log = Logger->new(\%log_hash);
my %process = (
   id => $in{'process_id'},
   name => $in{'process_name'},
   path => $in{'r_process_path'},
);

my $process_csv = '/path/to/process.csv';

html_header2(" Remove Process ");

my $result = remove_process();
if ($result == 0) {
   print '<p>Incorrect input given, please try again.</p>';
   $log->logF("Webpage: Remove process failed as incorrect input was given");
}
elsif($result == -1){
   print '<p>Process not found</p>';
   $log->logF("Webpage: Remove process failed because the process that was asked to be removed does not exist in the webpage.");
}
else{
print <<END
   <script>
      window.close();
   </script>
END
}

sub remove_process{
   my $param;
   my $mode = "None";


   if ($process{'id'} =~ m/^\d+/){                            # match a number
      ($param) = $process{'id'} =~ m/^(\d+)/;
      $mode = "process id";
   }
   elsif ($process{'name'} =~ m{[^/]+\.?[^/]+$}) {
      ($param) = $process{'name'} =~ m{([^/]+\.?[^/]+)$};
      $mode = "process name";
   }
   elsif ($process{'path'} =~ m{^/([\w\._]+/)*[\w\._]+\.\w+$}){    # match a file path
      ($param) = $process{'path'} =~ m{^(/(?:[\w\._]+/)*[\w\._]+\.\w+)$};
      $mode = "process path";
   }
   else{
      return 0;
   }


   my @lines;
   my $found = 0;
   open(CSV, "<", $process_csv);
   while(<CSV>){
      print '<p>'.$_.'</p>';
      if ($mode eq "process id"){
         my ($cur_id) = $_ =~ m/^(\d+)/;
         next if $param == $cur_id && ($found = 1);
      }
      elsif ($mode eq "process name"){
         my ($cur_name) = $_ =~ m{^\d+,[^,]+/(.+?),};
         print '<p>cur name: '.$cur_name.'</p>';
         print '<p>param: '.$param.'</p>';
         print '<p>yes</p>' if $param eq $cur_name;
         next if $param eq $cur_name && ($found = 1);
      }
      elsif ($mode eq "process path"){
         my ($cur_path) = $_ =~ m/^\d+,(.*?),/;
         print '<p>cur path: '.$cur_path.'</p>';
         print '<p>param: '.$param.'</p>';
         print '<p>yes</p>' if $param eq $cur_path;
         next if $param eq $cur_path && ($found = 1);
      }
      push(@lines, $_);
   }

   return -1 if $found == 0;

   close(CSV);
   open(CSV, ">", $process_csv);
   
   my $length = scalar @lines;
   print '<p>length: '.$length.'</p>';
   for(my $i = 0; $i < $length; $i++){
      if ($i == $length - 1){
         $lines[$i] =~ s/\n$//;
      }
      print CSV $lines[$i];
   }

   $log->logF("Process with parameter $param removed from the health page");
   close(CSV);
   return 1;
}

sub html_header2 {
   local($title) = @_;
   my $HEADERTYPE = "Content-type: text/html";

   print "$HEADERTYPE\n\n";
   print "<html><head><title>$title</title>";
   print '<style>';

   # PURPLE SECTION START:

      # print 'body {';
      #    print 'background-color: #6500ad;';
      # print '}';
      # print 'input {';
      #    print 'background-color: grey;';
      # print '}';
      # print 'button {';
      #    print 'background-color: grey;';
      # print '}';
      # print 'select {';
      #    print 'background-color:grey;';
      # print '}';
      # print 'table {';
      #    print 'background-color: grey;';
      # print '}';

   # PURPLE SECTION END

      print '#process_info {';
         print 'width: 500px;';
         print 'height:200px;';
      print '}';

      print 'table {';
         print 'border-collapse: collapse;';
      print '}';

      print 'td, th {';
         print 'text-align: center;';
         print 'vertical-align: middle;';
         print 'border: 1px solid black;';
         print 'padding: 8px;';
      print '}';

      print '#toggle-button {';
      print '    position: fixed;';  # Set the position to fixed to keep it in place even when scrolling
      print '    top: 20px;';  # Adjust the distance from the top of the page
      print '    right: 20px;';  # Adjust the distance from the right of the page
      print '    z-index: 9999;';  # Ensure it appears above other elements on the page
      print '}';

   print '</style>';
   print "</head>\n<body>\n";     
}

html_trailer();